{"version":3,"file":"static/js/120.9dede775.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","components/Form/ContactForm.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltered = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFiltered],\n  (contacts, filter) => {\n    return !filter\n      ? contacts\n      : contacts.filter(e =>\n          e.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  }\n);\n","import { useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterInput = event => {\n    const filterStr = event.target.value;\n    console.log(filterStr);\n    dispatch(contactsFilter(filterStr));\n  };\n  return (\n    <label className=\"m-2\">\n      <p>Find contacts by name</p>\n      <input\n        className=\"border-2 border-green-700\"\n        type=\"text\"\n        onChange={handleFilterInput}\n      />\n    </label>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = () => {\n    dispatch(deleteContacts(id));\n    Notiflix.Notify.warning(`You deleted contact ${name}. `);\n  };\n\n  return (\n    <li className=\"m-1\">\n      <span className=\"p-2 text-center text-xl text-violet-500 \">\n        {name}: {number}\n      </span>\n      <button\n        className=\"left-10 bg-cyan-500 m-1 \"\n        onClick={deleteContact}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Contact } from './Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const reversedContacts = [...contacts].reverse();\n\n  return (\n    <>\n      {reversedContacts.length > 0 && (\n        <div>\n          <ul className=\"flex flex-col  p-0 items-baseline\">\n            {reversedContacts.map(({ id, number, name }) => (\n              <Contact key={id} id={id} name={name} number={number} />\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { useState } from 'react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handelChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        Notiflix.Notify.warning('You wrote something wrong, please try again!');\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = event.target;\n\n    const form = event.target;\n    const contactName = name.value;\n    const contactNumber = number.value;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === contactName.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${contactName} is already  in contacts.`);\n      form.reset();\n      return;\n    } else if (contacts.find(contact => contact.number === contactNumber)) {\n      Notiflix.Notify.failure(\n        `Contact number ${contactNumber} is already  in contacts.`\n      );\n      form.reset();\n    } else {\n      dispatch(addContacts({ name: contactName, number: contactNumber }));\n      Notiflix.Notify.success(`You added new contact ${contactName}. `);\n    }\n    setName('');\n    setNumber('');\n    form.reset();\n  };\n  return (\n    <>\n      <div>\n        <form\n          className=\"flex flex-col p-10 border-2 border-rose-600\"\n          onSubmit={handelSubmit}\n        >\n          <p className=\"text-center\"> Name</p>\n          <input\n            className=\"border-2 border-green-600\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            id=\"name\"\n            value={name}\n            onChange={handelChange}\n            placeholder=\"Enter name..\"\n            required\n          />\n          <p className=\"text-center\">Phone</p>\n          <input\n            className=\"border-2 border-green-600\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter number..\"\n            value={number}\n            onChange={handelChange}\n            id=\"number\"\n            required\n          />\n          <button className=\"bg-green-500 mt-2 text-base \" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/Form/ContactForm';\nimport { VscChromeClose, VscAdd } from 'react-icons/vsc';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const [show, setShow] = useState(false);\n\n  const showContactForm = () => setShow(true);\n  const closeContactForm = () => setShow(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"flex justify-center flex-col items-center\">\n      <div className=\"flex flex-row items-center\">\n        <h2 className=\"text-green-500 text-2xl m-5\">Contact</h2>\n        {show === false && (\n          <button\n            className=\"bg-cyan-500\"\n            type=\"button\"\n            onClick={showContactForm}\n          >\n            <VscAdd />\n          </button>\n        )}\n        {show === true && (\n          <button\n            className=\" bg-red-500\"\n            type=\"button\"\n            onClick={closeContactForm}\n          >\n            <VscChromeClose />\n          </button>\n        )}\n      </div>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      {error && <div>Sorry, something went wrong....</div>}\n      {show && <ContactForm />}\n      {contacts.length > 0 && <Filter />}\n      {contacts.length > 0 && !isLoading && <ContactList />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","e","name","toLowerCase","includes","Filter","dispatch","useDispatch","className","type","onChange","event","filterStr","target","value","console","log","contactsFilter","Contact","id","number","onClick","deleteContacts","Notiflix","ContactList","useSelector","reversedContacts","reverse","length","map","ContactForm","useState","setName","setNumber","handelChange","evt","onSubmit","preventDefault","form","contactName","contactNumber","find","contact","reset","addContacts","pattern","title","placeholder","required","ContactsPage","show","setShow","useEffect","fetchContacts"],"sourceRoot":""}
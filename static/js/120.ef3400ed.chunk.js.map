{"version":3,"file":"static/js/120.ef3400ed.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactList/Contact.jsx","components/ContactList/ContactList.jsx","components/Form/ContactForm.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltered = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFiltered],\n  (contacts, filter) => {\n    return !filter\n      ? contacts\n      : contacts.filter(e =>\n          e.name.toLowerCase().includes(filter.toLowerCase())\n        );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport { selectFiltered } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFiltered);\n\n  return (\n    <label className=\"m-2\">\n      <p>Find contacts by name</p>\n      <input\n        className=\"border-2 border-green-700\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(contactsFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const Contact = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = () => {\n    dispatch(deleteContacts(id));\n    Notiflix.Notify.warning(`You deleted contact ${name}. `);\n  };\n\n  return (\n    <li className=\"m-1\">\n      <span className=\"p-2 text-center text-xl text-violet-500 \">\n        {name}: {number}\n      </span>\n      <button\n        className=\"left-10 bg-cyan-500 m-1 \"\n        onClick={deleteContact}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { Contact } from './Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n  const reversedContacts = [...contacts].reverse();\n\n  return (\n    <>\n      {reversedContacts.length > 0 && (\n        <div>\n          <ul className=\"flex flex-col  p-0 items-baseline\">\n            {reversedContacts.map(({ id, number, name }) => (\n              <Contact key={id} id={id} name={name} number={number} />\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport { toast } from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handelChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        Notiflix.Notify.warning('You wrote something wrong, please try again!');\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      toast.error(`${name} is already  in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      toast.error(`Contact number ${number} is already  in contacts.`);\n    } else {\n      dispatch(addContacts({ name: name, number: number }));\n      toast.success(`You added new contact ${name}. `);\n    }\n    setName('');\n    setNumber('');\n  };\n  return (\n    <>\n      <div>\n        <form\n          className=\"flex flex-col p-10 border-2 border-rose-600\"\n          onSubmit={handelSubmit}\n        >\n          <p className=\"text-center\"> Name</p>\n          <input\n            className=\"border-2 border-green-600\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            id=\"name\"\n            value={name}\n            onChange={handelChange}\n            placeholder=\"Enter name..\"\n            required\n          />\n          <p className=\"text-center\">Phone</p>\n          <input\n            className=\"border-2 border-green-600\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"Enter number..\"\n            value={number}\n            onChange={handelChange}\n            id=\"number\"\n            required\n          />\n          <button className=\"bg-green-500 mt-2 text-base \" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/Form/ContactForm';\nimport { VscChromeClose, VscAdd } from 'react-icons/vsc';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const [show, setShow] = useState(false);\n\n  const showContactForm = () => setShow(true);\n  const closeContactForm = () => setShow(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"flex justify-center flex-col items-center\">\n      <div className=\"flex flex-row items-center\">\n        <h2 className=\"text-green-500 text-2xl m-5\">Contact</h2>\n        {show === false && (\n          <button\n            className=\"bg-cyan-500\"\n            type=\"button\"\n            onClick={showContactForm}\n          >\n            <VscAdd />\n          </button>\n        )}\n        {show === true && (\n          <button\n            className=\" bg-red-500\"\n            type=\"button\"\n            onClick={closeContactForm}\n          >\n            <VscChromeClose />\n          </button>\n        )}\n      </div>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      {error && <div>Sorry, something went wrong....</div>}\n      {show && <ContactForm />}\n      {contacts.length > 0 && <Filter />}\n      {contacts.length > 0 && !isLoading && <ContactList />}\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFiltered","filter","selectFilteredContacts","createSelector","e","name","toLowerCase","includes","Filter","dispatch","useDispatch","useSelector","className","type","value","onChange","contactsFilter","currentTarget","Contact","id","number","onClick","deleteContacts","Notiflix","ContactList","reversedContacts","reverse","length","map","ContactForm","useState","setName","setNumber","handelChange","evt","target","onSubmit","event","preventDefault","find","contact","toast","addContacts","pattern","title","placeholder","required","ContactsPage","show","setShow","useEffect","fetchContacts"],"sourceRoot":""}